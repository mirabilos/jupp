#!/bin/mksh
# $MirOS: contrib/code/jupp/install-sh,v 1.3 2005/08/26 23:05:11 tg Exp $
# _MirOS: contrib/gnu/aux/install-sh,v 1.7 2005/08/26 22:55:56 tg Exp $
#-
# Copyright (c) 2004, 2005
#	Thorsten "mirabile" Glaser <tg@66h.42h.de>
#
# Licensee is hereby permitted to deal in this work without restric-
# tion, including unlimited rights to use, publicly perform, modify,
# merge, distribute, sell, give away or sublicence, provided all co-
# pyright notices above, these terms and the disclaimer are retained
# in all redistributions or reproduced in accompanying documentation
# or other materials provided with binary redistributions.
#
# All advertising materials mentioning features or use of this soft-
# ware must display the following acknowledgement:
#	This product includes material provided by Thorsten Glaser.
#
# Licensor hereby provides this work "AS IS" and WITHOUT WARRANTY of
# any kind, expressed or implied, to the maximum extent permitted by
# applicable law, but with the warranty of being written without ma-
# licious intent or gross negligence; in no event shall licensor, an
# author or contributor be held liable for any damage, direct, indi-
# rect or other, however caused, arising in any way out of the usage
# of this work, even if advised of the possibility of such damage.

# XXX how to check for ksh88?
if [ -n "$BASH_VERSION" ]; then
	shopt -s extglob
	p=echo
elif [ -n "$SH_VERSION" ]; then
	case $SH_VERSION in
	*KSH*)
		set +o sh +o posix
		p=print
		;;
	esac
elif [[ -n $KSH_VERSION ]]; then
	p=print
fi

if [ -z "$p" ]; then
	echo "Shell not supported; go to http://mirbsd.mirsolutions.de/?mksh"
	exit 1
fi

allargs="$*"

installprog=/usr/bin/install
test -x /usr/ucb/install && installprog=/usr/ucb/install

if [[ $allargs != *@(-t=|-b=)* && -z $SFUDIR ]]; then
	exec $installprog "$@"
fi

args=
parg=
marg=
d=0
m=

while getopts "B:b:Ccdf:g:m:o:pSst:" opt; do
	case $opt in
	B)	args="$args -B $OPTARG"	;;
	b)	trans_b="${OPTARG#=}"	;;
	C)	args="$args -C"		;;
	c)	args="$args -c"		;;
	d)	d=1; args="$args -d"	;;
	f)	args="$args -f $OPTARG"	;;
	g)	parg="$parg -g $OPTARG"	;;
	m)	marg="$marg -m $OPTARG"	;;
	o)	parg="$parg -o $OPTARG"	;;
	p)	args="$args -p"		;;
	S)	args="$args -S"		;;
	s)	args="$args -s"		;;
	t)	trans_t="${OPTARG#=}"	;;
	esac
done
shift $((OPTIND - 1))

# we ignore requests for setting UID/GID on Interix
if [[ -n $SFUDIR ]]; then
	# on Interix, install(1) cannot make directories
	[[ $d = 1 ]] && exec /bin/mkdir -p $marg "$@"
else
	args="$args $parg"
fi
args="$args $marg"

set -A sources -- "$@"
let numsrcs=${#sources[@]}

if (( numsrcs < 2 )); then
	$p "Syntax: $0 [-bCcdpSs] [-B suf] [-f flag]"
	$p "\t[-g grp] [-m mode] [-o owner] [-b=x -t=x] srcs ... dst"
	exit 1
fi

let dstoff="numsrcs - 1"
let i=0

target="${sources[dstoff]}"

while (( i < dstoff )); do
	src="${sources[i]}"
	if [[ -d $target ]]; then
		dst="$target/${src##*/}"
	else
		dst="$target"
	fi

	dstdir="${dst%/*}"
	dstfile="${dst##*/}"

	if [[ -n $trans_t ]]; then
		dsttmp="$(basename "$dst" $trans_b \
		    | sed $trans_t)$trans_b"
		[[ -n $dsttmp ]] && dstfile="$dsttmp"
	fi

	$installprog $args "$src" "${dstdir}/${dstfile}" || exit 1

	let i++
done
exit 0
