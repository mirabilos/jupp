
                         Initialization file for JOE
                                 Super Pico

 JOE looks for this file in:
	1 - .picorc
	2 - $HOME/.jpicorc
	3 - /usr/local/lib/jpicorc

 This file can include other files by placing the following include command
 in the first column:

 :include filename

 FIRST SECTION: Default global options (these options can also be specified
 on the command line.  Also the NOXON, LINES, COLUMNS, DOPADDING and BAUD
 options can be specified in environment variables):

 Put each option you want set in the first column:

 -option	Sets the option
 --option	Clears the option

 -mid		Cursor is recentered when scrolling is necessary

-marking	Text between ^KB and cursor is highlighted (use with -lightoff)

 -asis		Characters 128 - 255 shown as-is

-force		Force final newline when files are saved

 -nobackups	If you don't want backup files to be created

-lightoff	Turn off highlighting after block copy or move

-exask		^KX always confirms file name

 -beep		Beep on errors and when cursor goes past extremes

 -nosta		Disable top-most status line

 -keepup	%k and %c status line escape sequences updated frequently

 -pg nnn	No. lines to keep for PgUp/PgDn

 -csmode	^KF after a pervious search does a ^L instead

 -backpath path Directory to store backup files

 -nonotice	Disable copyright notice

 -noxon		Attempt to turn off ^S/^Q processing

 -orphan	Put extra files given on command line in orphaned buffers
		instead of in windows

 -dopadding	Output pad characters (for when there is no tty handshaking)

 -lines nnn	Set no. screen lines

 -baud nnn	Set baud rate for terminal optimizations

 -columns nnn	Set no. screen columns

-help		Start with help on

 -skiptop nnn	Don't use top nnn lines of the screen

 Status line definition strings.  -lmsg defines the left-justified string and
 -rmsg defines the right-justified string.  The first character of -rmsg is
 the background fill character.  The following escape sequences can be used
 in these strings:

  %t  12 hour time
  %u  24 hour time
  %T  O for overtype mode, I for insert mode
  %W  W if wordwrap is enabled
  %I  A if autoindent is enabled
  %X  Rectangle mode indicator
  %n  File name
  %m  '(Modified)' if file has been changed
  %*  '*' if file has been changed
  %R  Read-only indicator
  %r  Row (line) number
  %c  Column number
  %o  Byte offset into file
  %O  Byte offset into file in hex
  %a  Ascii value of character under cursor
  %A  Ascii value of character under cursor in hex
  %p  Percent of file cursor is at
  %l  No. lines in file
  %k  Entered prefix keys
  %S  '*SHELL*' if there is a shell running in window
  %M  Macro recording message

 These formatting escape sequences may also be given:
 
  \i  Inverse
  \u  Underline
  \b  Bold
  \d  Dim
  \f  Blink

-lmsg \i%k%T%W%I%X %n %m%R %M
-rmsg  %S Row %r Col %c %t  Ctrl-G for help

 SECOND SECTION: File name dependant local option settings:

 Each line with '*' in the first column indicates the modes which should be
 set for files which match the regular expression.  If more than one regular
 expression matches the file name, then the last matching one is chosen.

 Here are the modes which can be set:

	-wordwrap		Wordwrap

	-autoindent		Auto indent

	-overwrite		Overtype mode

	-lmargin nnn		Left margin

	-rmargin nnn		Right margin

	-tab nnn		Tab width

	-indentc nnn		Indentation character (32 for space, 9 for tab)

	-istep nnn		Number of indentation columns

	-french			One space after '.', '?' and '!' for wordwrap
				and paragraph reformat instead of two.  Joe
				does not change the spacing you give, but
				sometimes it must put spacing in itself.  This
				selects how much is inserted.

	-spaces			TAB inserts spaces instead of tabs.

	-linums			Enable line numbers on each line

	-rdonly			File is read-only

	-keymap name		Keymap to use if not 'main'

	-lmsg			Status line definition strings-
	-rmsg			see previous section for more info.

	-mnew macro		Macro to execute when new files are loaded
	-mold macro		Macro to execute when existing files are loaded
	-msnew macro		Macro to execute when new files are saved
	-msold macro		Macro to execute when existing files are saved

	Macros for the above options are in the same format as in the key
	binding section below- but without the key name strings.

*
-wordwrap

*.c
-autoindent

*.h
-autoindent

*akefile
*AKEFILE
*rc

*.p
-autoindent

 THIRD SECTION: Named help screens:

 Use \i to turn on/off inverse video
 Use \u to turn on/off underline
 Use \b to turn on/off bold
 Use \d to turn on/off dim
 Use \f to turn on/off flash

{Basic
\i   Help Screen    turn off with ^G     more help with ^[. (ESC .)              \i
\i \i\uCURSOR\u           \uGO TO\u            \uBLOCK\u      \uDELETE\u    \uMISC\u         \uEXIT\u     \i \i
\i \i^B left ^F right ^[Y top of file  ^^  mark   ^D  char  ^J   format  ^X save  \i \i
\i \i^P up   ^N down  ^[V end of file  ^K  cut    ^K  line  ^T   spell   ^C abort \i \i
\i \i^Y prev. screen  ^A  beg. of line ^U  paste  ^[K >line ^[T  file    ^Z shell \i \i
\i \i^V next screen   ^E  end of line  ^[U select ^[H word< ^L   refresh \uFILE\u     \i \i
\i \i^@  prev. word   ^[L line No.     ^O  save   ^[D >word ^[^[ options ^O save  \i \i
\i \i^_  next word    ^W  find text    ^[/ filter ^[- undo  ^[=  redo    ^R insert\i \i
}

{Advanced
\i   Help Screen    turn off with ^G     prev. screen ^[,    next screen ^[.     \i
\i \i\uMACROS\u         \uWINDOW\u          \uWINDOW\u     \uSHELL\u         \uMISC\u                 \i \i
\i \i^[( 0-9 Record ^[O Split       ^[I Grow   ^[! Command   ^[X Execute command  \i \i
\i \i^[)     Stop   ^[E Edit file   ^[J Shrink ^[W Window    ^[M Math             \i \i
\i \i^[ 0-9  Play   ^[P Goto prev.  \uQUOTE\u      \uI-SEARCH\u      ^[C Center line      \i \i
\i \i^[?     Query  ^[N Goto next   `  Ctrl-   ^[R Backwards ^[G to matching ( [ {\i \i
\i \i^[\\     Repeat ^[Z Zoom in/out ^\\ Meta-   ^[S Forwards  ^[< ^[> pan left/rght\i \i
}

{Search
\i   Help Screen    turn off with ^G     prev. screen ^[,    next screen ^[.     \i
\i \iSpecial search sequences:                                                    \i \i
\i \i    \\^  \\$  matches beg./end of line     \\?     match any single char        \i \i
\i \i    \\<  \\>  matches beg./end of word     \\*     match 0 or more chars        \i \i
\i \i    \\c     matches balanced C expression \\\\     matches a \\                  \i \i
\i \i    \\[..]  matches one of a set          \\n     matches a newline            \i \i
\i \i    \\+     matches 0 or more of the character which follows the \\+           \i \i
\i \iSpecial replace sequences:                                                   \i \i
\i \i    \\&     replaced with text which matched search string                    \i \i
\i \i    \\0 - 9 replaced with text which matched Nth \\*, \\?, \\c, \\+, or \\[..]     \i \i
\i \i    \\\\     replaced with \\               \\n     replaced with newline        \i \i
}

{Names
\i   Help Screen    turn off with ^G     prev. screen ^[,    next screen ^[.     \i
\i \i Hit TAB at file name prompts to generate menu of file names                 \i \i
\i \i Or use up/down keys to access history of previously entered names           \i \i
\i \i Special file names:                                                         \i \i
\i \i      !command                 Pipe in/out of a shell command                \i \i
\i \i      >>filename               Append to a file                              \i \i
\i \i      -                        Read/Write to/from standard I/O               \i \i
\i \i      filename,START,SIZE      Read/Write a part of a file/device            \i \i
\i \i          Give START/SIZE in decimal (255), octal (0377) or hex (0xFF)       \i \i
}

{Joe
\i   Help Screen    turn off with ^G     prev. screen ^[,                        \i
\i \i Send bug reports to: Joe Allen (jhallen@world.std.com)                      \i \i
}

 FOURTH SECTION: Key bindings:

 Section names you must provide:

	:main		For editing window
	:prompt		For prompt lines
	:query		For single-character query lines
	:querya		Singe-character query for quote
	:querysr	Search & Replace single-character query

 Other sections may be given as well for organization purposes or for
 use with the '-keymap' option.

 Use:
 :inherit name		To copy the named section into the current one
 :delete key		To delete a key sequence from the current section

 Keys:

 Use ^@ through ^_ and ^? for Ctrl chars
 Use SP for space
 Use a TO b to generate a range of characters

 You can also use termcap string capability names.  For example:

	.ku		Up
	.kd		Down
	.kl		Left
	.kr		Right
	.kh		Home
	.kH		End
	.kI		Insert
	.kD		Delete
	.kP		PgUp
	.kN		PgDn
	.k1 - .k9	F1 - F9
	.k0		F0 or F10
	.k;		F10

 Macros:

 Simple macros can be made by comma seperating 2 or more command names.  For
 example:

 eof,bol	^T Z		Goto beginning of last line

 Also quoted matter is typed in literally:

 bol,">",dnarw	.k1		Quote news article line

 Macros may cross lines if they end with ,

 Commands or named macros may be created with :def.  For example, you can
 use:

 :def foo eof,bol

 To define a command foo which will goto the beginning of the last line.

:windows		Bindings common to all windows
type		^@ TO ÿ		Type a character
abort		^C		Abort window
arg		^[ \		Repeat next command
explode		^[ Z		Show all windows or show only one window
explode		^[ ^Z
explode		^[ z
help		^G		Help menu
help		.k1
hnext		^[ .		Next help window
hprev		^[ ,		Previous help window
math		^[ m		Calculator
math		^[ M		Calculator
math		^[ ^M		Calculator
nextw		^[ N		Goto next window
nextw		^[ ^N
nextw		^[ n
pgdn		.kN		Screen down
pgdn		^V
pgdn		^[ [ 6 ~
pgup		.kP		Screen up
pgup		^Y
pgup		^[ [ 5 ~
play		^[ 0 TO 9	Execute macro
prevw		^[ P		Goto previous window
prevw		^[ ^P
prevw		^[ p
query		^[ ?		Macro query insert
record		^[ (		Record a macro
retype		^L		Refresh screen
rtn		^M		Return
shell		^Z
stop		^[ )		Stop recording

:main			Text editing window
:inherit windows

 Spell-check macros

:def spellfile filt,"cat >ispell.tmp;ispell ispell.tmp </dev/tty >/dev/tty;cat ispell.tmp;/bin/rm ispell.tmp",rtn,retype
:def spellword psh,nextword,markk,prevword,markb,filt,"cat >ispell.tmp;ispell ispell.tmp </dev/tty >/dev/tty;tr -d <ispell.tmp '\\012';/bin/rm ispell.tmp",rtn,retype,nextword

spellword	^T
spellfile	^[ T		Spell check word
spellfile	^[ t
spellfile	^[ ^T

 ask,query,lose,query,abortbuf	^X	Exit after many questions
exsave		^X		Exit
backs		^?		Backspace
backs		^H
backw		^[ H		Backspace word
backw		^[ ^?
backw		^[ ^H
backw		^[ h
bknd		^[ W		Shell window
bknd		^[ w
bknd		^[ ^W
bof		^[ Y		Goto beginning of file
bof		^[ ^Y
bof		^[ y
bol		.kh		Goto beginning of line
bol		^A
center		^[ ^C		Center line
center		^[ c
delch		.kD		Delete character
delch		^D
deleol		^[ K		Delete to end of line
deleol		^[ ^K
deleol		^[ k
delw		^[ ^D		Delete word
delw		^[ d
dnarw		.kd		Go down
dnarw		^N
dnarw		^[ O B
dnarw		^[ [ B
drop		^^		Marking
edit		^[ E		Edit a file
edit		^[ ^E
edit		^[ e
eof		^[ V		Go to end of file
eof		^[ ^V
eof		^[ v
eol		.kH		Go to end of line
eol		^E
execmd		^[ X		Prompt for command to execute
execmd		^[ ^X		Prompt for command to execute
execmd		^[ x		Prompt for command to execute
ffirst		^W		Find first
markk,filt		^[ /		Filter block though file
fmtblk		^J		Format paragraphs in block
groww		^[ I		Grow window
groww		^[ ^I
groww		^[ i
insc		.kI		Insert a space
insf		^R		Insert a file
isrch		^[ S		Forward incremental search
isrch		^[ ^S		Forward incremental search
isrch		^[ s		Forward incremental search
line		^[ L		Goto line no.
line		^[ ^L
line		^[ l
ltarw		.kl		Go left
ltarw		^B
ltarw		^[ O D
ltarw		^[ [ D
mode		^[ ^[		Options menu
nextword	^@		Goto next word
open		^]		Split line
prevword	^_		Previous word
picokill	^K		Pico kill function
quote		`		Enter Ctrl chars
quote8		^\		Enter Meta chars
redo		^[ =		Redo changes
rsrch		^[ R		Backward incremental search
rsrch		^[ ^R		Backward incremental search
rsrch		^[ r		Backward incremental search
rtarw		.kr		Go right
rtarw		^F
rtarw		^[ O C
rtarw		^[ [ C
run		^[ !		Run a program in a window
stat		^[ SP		Cursor position status
markk,blksave		^O		Save file
crawll		^[ <		Pan left
crawlr		^[ >		Pan right
shrinkw		^[ J		Shrink window
shrinkw		^[ ^J
shrinkw		^[ j
splitw		^[ ^O		Split window
splitw		^[ o
tag		^[ ;		Tags file search
tomatch		^[ G		To matching delimiter
tomatch		^[ g
tomatch		^[ ^G
undo		^[ -		Undo changes
uparw		.ku		Go up
uparw		^P
uparw		^[ O A
uparw		^[ [ A
yank		^U		Paste
yankpop		^[ U		Select yanked text
yankpop		^[ ^U
yankpop		^[ u

:prompt			Prompt windows
:inherit main
complete	^I

:menu			Selection menus
:inherit windows
abort		^[ ^[
backsmenu	^?
backsmenu	^H
bofmenu		^K U
bofmenu		^K ^U
bofmenu		^K u
bolmenu		.kh
bolmenu		^A
dnarwmenu	.kd
dnarwmenu	^N
dnarwmenu	^[ [ B
dnarwmenu	^[ O B
eofmenu		^K V
eofmenu		^K ^V
eofmenu		^K v
eolmenu		.kH
eolmenu		^E
ltarwmenu	.kl
ltarwmenu	^B
ltarwmenu	^[ [ D
ltarwmenu	^[ O D
rtarwmenu	.kr
rtarwmenu	^F
rtarwmenu	^[ [ C
rtarwmenu	^[ O C
rtn		SP
rtn		^I
rtn		^K H
rtn		^K h
rtn		^K ^H
uparwmenu	.ku
uparwmenu	^P
uparwmenu	^[ [ A
uparwmenu	^[ O A

:query			Single-key query window
:inherit windows

:querya			Single-key query window for quoting
type		^@ TO ÿ

:querysr		Search & replace query window
type		^@ TO ÿ
